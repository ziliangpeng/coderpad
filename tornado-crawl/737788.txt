<!DOCTYPE html>
<!-- CoderPad (c) 2013 Vincent Woo -->
<html>
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"beacon-2.newrelic.com","errorBeacon":"jserror.newrelic.com","licenseKey":"586aeabffa","applicationID":"2434573","transactionName":"cF5XTRNfXF9VQxkSVVdCFkoJX0c=","queueTime":24,"applicationTime":48,"ttGuid":"","agentToken":null,"agent":"js-agent.newrelic.com/nr-314.min.js"}</script>
<script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function a(b,c,d){function e(f){if(!c[f]){var g=c[f]={exports:{}};b[f][0].call(g.exports,function(a){var c=b[f][1][a];return e(c?c:a)},g,g.exports,a,b,c,d)}return c[f].exports}for(var f=0;f<d.length;f++)e(d[f]);return e}({"4O2Y62":[function(a,b){function c(a,b){var c=d[a];return c?c.apply(this,b):(e[a]||(e[a]=[]),void e[a].push(b))}var d={},e={};b.exports=c,c.queues=e,c.handlers=d},{}],handle:[function(a,b){b.exports=a("4O2Y62")},{}],YLUGVp:[function(a,b){function c(){var a=m.info=NREUM.info;if(a&&a.agent&&a.licenseKey&&a.applicationID){m.proto="https"===l.split(":")[0]||a.sslForHttp?"https://":"http://",g("mark",["onload",f()]);var b=i.createElement("script");b.src=m.proto+a.agent,i.body.appendChild(b)}}function d(){"complete"===i.readyState&&e()}function e(){g("mark",["domContent",f()])}function f(){return(new Date).getTime()}var g=a("handle"),h=window,i=h.document,j="addEventListener",k="attachEvent",l=(""+location).split("?")[0],m=b.exports={offset:f(),origin:l};i[j]?(i[j]("DOMContentLoaded",e,!1),h[j]("load",c,!1)):(i[k]("onreadystatechange",d),h[k]("onload",c)),g("mark",["firstbyte",f()])},{handle:"4O2Y62"}],loader:[function(a,b){b.exports=a("YLUGVp")},{}]},{},["YLUGVp"]);</script>
  <meta name="description"
    content="CoderPad is the best tool available for conducting programming phone screen interviews. Edit code and run it with your candidate, realtime in the browser.">
  <link rel="shortcut icon" href="//d146h09pbg0b1a.cloudfront.net/assets/coderpad_logo_32x32-4cb7162b76ccaa9584b63b603f47e139.png">

  <title>CoderPad - Python</title>

  <link href="//fonts.googleapis.com/css?family=Bitter:400,700|Lato:300,700" media="all" rel="stylesheet" />
  <link href="//d146h09pbg0b1a.cloudfront.net/assets/application-c992391beaa069692384c4b76e08bd1b.css" media="all" rel="stylesheet" />
  
  
</head>
<body class="pad">

  
  

  
<div id="overlay">
  <div>
      <p>
        <span>Welcome to CoderPad!</span><br>
        Identify yourself below, if you please.
      </p>
      <input id="name-prompt">
      <button id="go" class="btn btn-primary">
        Go!
      </button>
  </div>
</div>

<div id="header">

  <div id="header-wrapper">
      <button
        class="btn btn-primary tooltip-target"
        id="run"
        data-toggle="tooltip"
        title="Shortcut: ctrl + enter"
        data-placement="bottom"
        data-html="true"
      >
        Run
        <span class="fui-play"></span>
      </button>


    <a
      id="settings-toggle"
      href="#"
      data-toggle="modal"
      data-target="#settings-modal"
    >
      <span
        class="fui-gear tooltip-target"
        data-toggle="tooltip"
        data-placement="bottom"
        title="Pad settings"
      ></span>
    </a>

  </div>
</div>

<div id="workspace-wrap" class="pad">
  <div id="workspace" class="python">
    <div id="editor" class="pane">
      <span class="pane-label">Python Code</span>
      <div id="editor-widget" class="codemirror-container"></div>
    </div>
    <div id="vertical" class="resizer"></div>
    <div id="right-pane">
        <div id="console-wrap" class="pane full">
          <span class="pane-label">Console</span>
          <div id="console"></div>
        </div>
    </div>
  </div>
</div>

<div id="sidebar">
  <ol id="users"></ol>

  <p>
    CoderPad is a collaborative code editor with real-time execution
     built straight into the browser.
  </p>
    <p>
      This pad also supports typing commands directly into the
      interactive shell on the right side of the screen.
    </p>
    <p><a href="https://plus.google.com/hangouts/_?gid=583721984460&amp;gd=https%3A%2F%2Fcoderpad.io%2F737788">Open Google Hangout</a></p>
  </p>
</div>




<script>
  window.lang     = 'python';
  window.pad      = '737788';
  window.username = null ||
    ('Guest ' + Math.floor(Math.random() * 1000));
  window.snippets = {"bfs_java":"\r\nclass Node {\r\n  \r\n}\r\n\r\nclass Solution {\r\n  \r\n  public static void main(String[] args) {\r\n    // make the tree\r\n    // print the tree in breadth-first order\r\n    // So, if you had a tree like at: http://qeexo.com/imgs/bfs_example.png\r\n    // Your code would print \"a b c d e f g\"\r\n  }\r\n}\r\n","Fibonacci":"\r\n\r\n// To execute Java, please define \"static void main\" on a class named Solution\r\n\r\nclass Solution {\r\n  \r\n  /** Prints the first N fibonacci numbers\r\n  **/\r\n  public static void fibonacci(int n) {\r\n    \r\n  }\r\n  \r\n  public static void main(String[] args) {\r\n    fibonacci(100);\r\n  }\r\n}\r\n","fizz buzz java":"\r\n\r\n// To execute Java, please define \"static void main\" on a class named Solution\r\n\r\nclass Solution {\r\n   /** Prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”. **/\r\n  public static void main(String[] args) {\r\n\r\n  }\r\n}\r\n","fizzbuzz":"def fizzbuzz():\r\n  # your fizzbuzz code here\r\n\r\nfizzbuzz()\r\n","bfs_question":"class Node:\r\n  def __init__(self, value, left, right):\r\n    self.value = value\r\n    self.left = left\r\n    self.right = right\r\n\r\ndef print_tree(root):\r\n  # Your code here\r\n    \r\nroot = Node(\"a\", Node(\"b\", Node(\"d\", None, None), Node(\"e\", None, None)), Node(\"c\", Node(\"f\", None, None), Node(\"g\", None, None)))\r\n\r\nprint_tree(root)\r\n","fibonacci":"def fib(n):\r\n  '''Print the first n fibonacci numbers'''\r\n  # Your code here\r\n  \r\nfib(100)","reverse words":"def reverse_words(sentence):\r\n  '''Reverses the order of words in a sentence'''\r\n  # Your code here  \r\nprint(reverse_words(\"this is a test\"))\r\nprint(reverse_words(\"a big long sentence.\"))\r\n  ","bfs_answer":"def print_tree(root):\r\n  to_expand = [root]  \r\n  \r\n  while (len(to_expand) \u003E 0):\r\n    cur = to_expand.pop()\r\n    print cur.value\r\n    if(cur.left is not None):\r\n      to_expand.insert(0, cur.left)\r\n    if(cur.right is not None):\r\n      to_expand.insert(0, cur.right) ","dp1 answer":"# ----------\r\n# User Instructions:\r\n# \r\n# Create a function compute_value() which returns\r\n# a grid of values. Value is defined as the minimum\r\n# number of moves required to get from a cell to the\r\n# goal. \r\n#\r\n# If it is impossible to reach the goal from a cell\r\n# you should assign that cell a value of 99.\r\n\r\n# ----------\r\n\r\ngrid = [[0, 1, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 1, 0]]\r\n\r\ngoal = [len(grid)-1, len(grid[0])-1]\r\n\r\ndelta = [[-1, 0 ], # go up\r\n         [ 0, -1], # go left\r\n         [ 1, 0 ], # go down\r\n         [ 0, 1 ]] # go right\r\n\r\ncost_step = 1 # the cost associated with moving from a cell to an adjacent one.\r\n\r\n# ----------------------------------------\r\n# insert code below\r\n# ----------------------------------------\r\n\r\ndef compute_value():\r\n    value = [[99 for x in row] for row in grid]\r\n    to_expand = [goal]\r\n    while len(to_expand) \u003E 0:\r\n        r,c = to_expand.pop()\r\n        if [r,c] == goal:\r\n            min_cost = -1\r\n        else:\r\n            min_cost = 99\r\n        for dr,dc in delta:\r\n            r2,c2 = [r + dr,c+dc]\r\n            if(r2 \u003C 0 or r2 \u003E= len(grid) or c2 \u003C 0 or c2 \u003E= len(grid[0])):\r\n                continue\r\n            if(value[r2][c2] \u003C min_cost):\r\n                min_cost = value[r2][c2]\r\n            if(value[r2][c2] \u003C 99):\r\n                continue\r\n            if(grid[r2][c2] == 1):\r\n                continue\r\n            to_expand.append([r2, c2])\r\n        value[r][c] = min_cost + cost_step\r\n                \r\n    return value #make sure your function returns a grid of values as demonstrated in the previous video.\r\n\r\nv = compute_value()\r\nfor row in v:\r\n    print row\r\n","dp1":"# ----------\r\n# User Instructions:\r\n# \r\n# Create a function compute_value() which returns\r\n# a grid of values. Value is defined as the minimum\r\n# number of moves required to get from a cell to the\r\n# goal. \r\n#\r\n# If it is impossible to reach the goal from a cell\r\n# you should assign that cell a value of 99.\r\n\r\n# ----------\r\n\r\ngrid = [[0, 1, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 1, 0]]\r\n\r\ngoal = [len(grid)-1, len(grid[0])-1]\r\n\r\ndelta = [[-1, 0 ], # go up\r\n         [ 0, -1], # go left\r\n         [ 1, 0 ], # go down\r\n         [ 0, 1 ]] # go right\r\n\r\ncost_step = 1 # the cost associated with moving from a cell to an adjacent one.\r\n\r\n# ----------------------------------------\r\n# insert code below\r\n# ----------------------------------------\r\n\r\ndef compute_value():\r\n   \r\n                \r\n    return value #make sure your function returns a grid of values as demonstrated in the previous video.\r\n\r\nv = compute_value()\r\nfor row in v:\r\n    print row\r\n","dp1_v2":"# ----------\r\n# Maze Navigation:\r\n# \r\n# Create a function compute_value() which returns\r\n# a grid of values. Value is defined as the minimum\r\n# number of moves required to get from a cell to the\r\n# goal. \r\n#\r\n# A move is defined as moving up, right, left or down.\r\n# each move costs you 1 unit.\r\n#\r\n# If it is impossible to reach the goal from a cell\r\n# you should assign that cell a value of 99.\r\n\r\n# ----------\r\n\r\n# Maze definition. 1 means impassable.\r\ngrid = [[0, 1, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0],\r\n        [0, 1, 0, 0, 0, 0],\r\n        [0, 0, 0, 0, 1, 0]]\r\n\r\n# Location of the goal (bottom right hand corner)\r\ngoal = [len(grid)-1, len(grid[0])-1]\r\n\r\n# Directions you can go\r\ndelta = [[-1, 0 ], # go up\r\n         [ 0, -1], # go left\r\n         [ 1, 0 ], # go down\r\n         [ 0, 1 ]] # go right\r\n\r\n# the cost associated with moving from a cell to an adjacent one.\r\ncost_step = 1 \r\n\r\n# ----------------------------------------\r\n# insert code below\r\n# ----------------------------------------\r\n\r\ndef compute_value():\r\n               \r\n\r\nv = compute_value()\r\nfor row in v:\r\n    print row\r\n","fizzbuzz2":"def fizzbuzz():\r\n  ''' Classic fizzbuzz test\r\n  \r\n  Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”.\r\n  '''\r\n  # your fizzbuzz code here\r\n\r\nfizzbuzz()\r\n"}
</script>
<script src="https://cdn.firebase.com/v0/firebase.js"></script>


  
  
<div class="modal fade" id="switching-language-modal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      
  <p>The pad's language is switching to: <span></span>&hellip;</p>
  <p>Everyone&rsquo;s tabs will refresh shortly.</p>

    </div>
  </div>
</div>


<div class="modal fade" id="settings-modal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      
  <h3><span class="fui-gear"></span>Pad Settings</h3>
  <ul>
    <li>
      <h4>Language</h4>
      <p>Warning: Changing the pad language will refresh the window for all participants.</p>
      <select class="selectpicker" id="language-select" name="language-select"><option value="c">C</option>
<option value="csharp">C#</option>
<option value="cpp">C++</option>
<option value="clojure">Clojure</option>
<option value="coffeescript">CoffeeScript</option>
<option value="go">Go</option>
<option value="haskell">Haskell</option>
<option value="java">Java</option>
<option value="javascript">JavaScript</option>
<option value="markdown">Markdown</option>
<option value="objc">Objective-C</option>
<option value="php">PHP</option>
<option value="perl">Perl</option>
<option selected="selected" value="python">Python</option>
<option value="ruby">Ruby</option>
<option value="scala">Scala</option></select>
    </li>
    <li>
      <h4>Tab &nbsp;Spacing</h4>
      <p>Control the number of spaces used for indentation.</p>
      <select class="selectpicker" id="tab-type-select" name="tab-type-select"><option selected="selected" value="2">2 Space Tabs</option>
<option value="4">4 Space Tabs</option>
<option value="8">8 Space Tabs</option></select>
    </li>
  </ul>

    </div>
  </div>
</div>


<div class="modal fade" id="create-modal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      
    <div class="modal-body clearfix">
      <h4>Choose the language for your new pad:</h4>

      <form accept-charset="UTF-8" action="/" class="new_pad" id="new_pad" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
        <div class="clearfix">
            <ul>
              <li class="header">Interpreted</li>
                <li>
                  <input id="pad_language_coffeescript" name="pad[language]" type="radio" value="coffeescript" />
                  <label for="pad_language_coffeescript">CoffeeScript</label>
                </li>
                <li>
                  <input id="pad_language_javascript" name="pad[language]" type="radio" value="javascript" />
                  <label for="pad_language_javascript">JavaScript</label>
                </li>
                <li>
                  <input id="pad_language_perl" name="pad[language]" type="radio" value="perl" />
                  <label for="pad_language_perl">Perl</label>
                </li>
                <li>
                  <input id="pad_language_php" name="pad[language]" type="radio" value="php" />
                  <label for="pad_language_php">PHP</label>
                </li>
                <li>
                  <input id="pad_language_python" name="pad[language]" type="radio" value="python" />
                  <label for="pad_language_python">Python</label>
                </li>
                <li>
                  <input checked="checked" id="pad_language_ruby" name="pad[language]" type="radio" value="ruby" />
                  <label for="pad_language_ruby">Ruby</label>
                </li>
            </ul>
            <ul>
              <li class="header">Compiled</li>
                <li>
                  <input id="pad_language_c" name="pad[language]" type="radio" value="c" />
                  <label for="pad_language_c">C</label>
                </li>
                <li>
                  <input id="pad_language_clojure" name="pad[language]" type="radio" value="clojure" />
                  <label for="pad_language_clojure">Clojure</label>
                </li>
                <li>
                  <input id="pad_language_cpp" name="pad[language]" type="radio" value="cpp" />
                  <label for="pad_language_cpp">C++</label>
                </li>
                <li>
                  <input id="pad_language_csharp" name="pad[language]" type="radio" value="csharp" />
                  <label for="pad_language_csharp">C#</label>
                </li>
                <li>
                  <input id="pad_language_go" name="pad[language]" type="radio" value="go" />
                  <label for="pad_language_go">Go</label>
                </li>
                <li>
                  <input id="pad_language_haskell" name="pad[language]" type="radio" value="haskell" />
                  <label for="pad_language_haskell">Haskell</label>
                </li>
                <li>
                  <input id="pad_language_java" name="pad[language]" type="radio" value="java" />
                  <label for="pad_language_java">Java</label>
                </li>
                <li>
                  <input id="pad_language_objc" name="pad[language]" type="radio" value="objc" />
                  <label for="pad_language_objc">Objective-C</label>
                </li>
                <li>
                  <input id="pad_language_scala" name="pad[language]" type="radio" value="scala" />
                  <label for="pad_language_scala">Scala</label>
                </li>
            </ul>
            <ul>
              <li class="header">Documents</li>
                <li>
                  <input id="pad_language_markdown" name="pad[language]" type="radio" value="markdown" />
                  <label for="pad_language_markdown">Markdown</label>
                </li>
            </ul>
        </div>
        <p>
          <input class="btn btn-primary" name="commit" type="submit" value="Create Pad" /> or
          <input class="btn btn-primary" name="commit" type="submit" value="Launch Google Hangout" />
        </p>
</form>    </div>

    </div>
  </div>
</div>



  <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
    <script src="//cdn.ravenjs.com/1.1.2/jquery,native/raven.min.js"></script>
    <script>
      Raven.config('https://4d747205c6ed435c889710eaead44e12@app.getsentry.com/10579', {
        includePaths: [
          /localhost/,
          /coderpad\.io/,
          /vincentwoo\.com/,
          /d146h09pbg0b1a\.cloudfront/
        ],
        ignoreUrls: [
          /graph\.facebook\.com/i,
          /connect\.facebook\.net\/en_US\/all\.js/i,
          /eatdifferent\.com\.woopra-ns\.com/i,
          /static\.woopra\.com\/js\/woopra\.js/i,
          /extensions\//i,
          /^chrome:\/\//i,
          /127\.0\.0\.1:4001\/isrunning/i,
          /webappstoolbarba\.texthelp\.com\//i,
          /metrics\.itunes\.apple\.com\.edgesuite\.net\//i
        ]
      }).install();
    </script>
  <script src="//d146h09pbg0b1a.cloudfront.net/assets/application-ac1fc5b18aff7c11b7c357930bb008e9.js"></script>
</body>
</html>
