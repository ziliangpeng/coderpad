<!DOCTYPE html>
<!-- CoderPad (c) 2013 Vincent Woo -->
<html>
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"beacon-2.newrelic.com","errorBeacon":"jserror.newrelic.com","licenseKey":"586aeabffa","applicationID":"2434573","transactionName":"cF5XTRNfXF9VQxkSVVdCFkoJX0c=","queueTime":73,"applicationTime":103,"ttGuid":"","agentToken":null,"agent":"js-agent.newrelic.com/nr-314.min.js"}</script>
<script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function a(b,c,d){function e(f){if(!c[f]){var g=c[f]={exports:{}};b[f][0].call(g.exports,function(a){var c=b[f][1][a];return e(c?c:a)},g,g.exports,a,b,c,d)}return c[f].exports}for(var f=0;f<d.length;f++)e(d[f]);return e}({"4O2Y62":[function(a,b){function c(a,b){var c=d[a];return c?c.apply(this,b):(e[a]||(e[a]=[]),void e[a].push(b))}var d={},e={};b.exports=c,c.queues=e,c.handlers=d},{}],handle:[function(a,b){b.exports=a("4O2Y62")},{}],YLUGVp:[function(a,b){function c(){var a=m.info=NREUM.info;if(a&&a.agent&&a.licenseKey&&a.applicationID){m.proto="https"===l.split(":")[0]||a.sslForHttp?"https://":"http://",g("mark",["onload",f()]);var b=i.createElement("script");b.src=m.proto+a.agent,i.body.appendChild(b)}}function d(){"complete"===i.readyState&&e()}function e(){g("mark",["domContent",f()])}function f(){return(new Date).getTime()}var g=a("handle"),h=window,i=h.document,j="addEventListener",k="attachEvent",l=(""+location).split("?")[0],m=b.exports={offset:f(),origin:l};i[j]?(i[j]("DOMContentLoaded",e,!1),h[j]("load",c,!1)):(i[k]("onreadystatechange",d),h[k]("onload",c)),g("mark",["firstbyte",f()])},{handle:"4O2Y62"}],loader:[function(a,b){b.exports=a("YLUGVp")},{}]},{},["YLUGVp"]);</script>
  <meta name="description"
    content="CoderPad is the best tool available for conducting programming phone screen interviews. Edit code and run it with your candidate, realtime in the browser.">
  <link rel="shortcut icon" href="//d146h09pbg0b1a.cloudfront.net/assets/coderpad_logo_32x32-4cb7162b76ccaa9584b63b603f47e139.png">

  <title>CoderPad - Java</title>

  <link href="//fonts.googleapis.com/css?family=Bitter:400,700|Lato:300,700" media="all" rel="stylesheet" />
  <link href="//d146h09pbg0b1a.cloudfront.net/assets/application-c992391beaa069692384c4b76e08bd1b.css" media="all" rel="stylesheet" />
  
  
</head>
<body class="pad">

  
  

  
<div id="overlay">
  <div>
      <p>
        <span>Welcome to CoderPad!</span><br>
        Identify yourself below, if you please.
      </p>
      <input id="name-prompt">
      <button id="go" class="btn btn-primary">
        Go!
      </button>
  </div>
</div>

<div id="header">

  <div id="header-wrapper">
      <button
        class="btn btn-primary tooltip-target"
        id="run"
        data-toggle="tooltip"
        title="Shortcut: ctrl + enter"
        data-placement="bottom"
        data-html="true"
      >
        Run
        <span class="fui-play"></span>
      </button>


    <a
      id="settings-toggle"
      href="#"
      data-toggle="modal"
      data-target="#settings-modal"
    >
      <span
        class="fui-gear tooltip-target"
        data-toggle="tooltip"
        data-placement="bottom"
        title="Pad settings"
      ></span>
    </a>

  </div>
</div>

<div id="workspace-wrap" class="pad">
  <div id="workspace" class="java">
    <div id="editor" class="pane">
      <span class="pane-label">Java Code</span>
      <div id="editor-widget" class="codemirror-container"></div>
    </div>
    <div id="vertical" class="resizer"></div>
    <div id="right-pane">
        <div id="execution-log" class="pane full">
          <span class="pane-label">Results</span>
        </div>
    </div>
  </div>
</div>

<div id="sidebar">
  <ol id="users"></ol>

  <p>
    CoderPad is a collaborative code editor with real-time execution
     built straight into the browser.
  </p>
    <p><a href="https://plus.google.com/hangouts/_?gid=583721984460&amp;gd=https%3A%2F%2Fcoderpad.io%2F519861">Open Google Hangout</a></p>
  </p>
</div>




<script>
  window.lang     = 'java';
  window.pad      = '519861';
  window.username = null ||
    ('Guest ' + Math.floor(Math.random() * 1000));
  window.snippets = {"Question No.4":"// This is an abstract example of a middleware which takes functions to process some data\r\n\r\napp(\"/\", test, home);\r\napp(\"/admin\", admin);\r\n\r\nfunction home(req, res, next) {\r\n    result(req.where);\r\n    next();\r\n}\r\n\r\nfunction admin(req, res, next) {\r\n    result(\"Admin\");\r\n    next();\r\n}\r\n\r\nfunction test(req, res, next) {\r\n    req.where = \"Home\";\r\n    next();\r\n}\r\n\r\n// Write a middleware that parses the request parameters and puts them into a params object\r\n\r\n// call the middleware\r\nroute('/admin?name=johann\u0026role=admin');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//======================================================\r\n//======================================================\r\n//======================================================\r\n//======================================================\r\n//======================================================\r\n//======================================================\r\nfunction result(res){console.log(res);}\r\nvar routes = {};\r\nfunction app(path) {\r\n  routes = routes || {};\r\n  var args = Array.prototype.slice.call(arguments);\r\n  if (typeof path !== \"string\") {throw Error(\"Please provide a string path\");}\r\n  if (typeof args[1] !== \"function\") {throw Error(\"Provide a string path\");}\r\n  var req = {}, res = {};\r\n  function next(i){\r\n    if(i === args.length){return;}\r\n    args[i](req, res, function(){next(i+1);});\r\n  }\r\n  routes[path] = function (url) {\r\n    req.url = url;\r\n    next(1);\r\n  };\r\n}\r\nfunction route (url){\r\n  var path = url.split(\"?\")[0];\r\n  routes[path](url);\r\n}","Android Question No. 1":"import java.io.BufferedReader;\r\nimport java.io.DataOutputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.io.IOException;\r\nimport java.net.URL;\r\nimport org.json.simple.JSONObject;\r\nimport java.lang.Thread;\r\n\r\n// feel free to use the documentation\r\n\r\n/**\r\n * This is basic Java networking code with some flaws.\r\n * Does anything catch your eye? Please tell us and change the code so that it meets your quality standards.\r\n *\r\n * Why would a network request like this probably throw an exception on  Android?\r\n */\r\n\r\npublic class Solution {\r\n   public static void main(String[] args) {\r\n     try {\r\n       System.out.println(getSuggestion(\"nexus\"));\r\n     } catch (Exception e) {\r\n       e.printStackTrace();\r\n     }\r\n   }\r\n  \r\n  /**\r\n   * This method sends an HTTP request to a server and returns a JSON object (the result is not important at this point, focus on the code first)\r\n   * Example: getSuggestion(\"iPhone\");\r\n   */\r\n  static String getSuggestion(String query) throws Exception {\r\n\r\n\t\tString url = \"http://versus.com/object/?q=\"+query;\r\n \r\n\t\tURL obj = new URL(url);\r\n\t\tHttpURLConnection con = (HttpURLConnection) obj.openConnection();\r\n\r\n\t\tcon.setRequestMethod(\"GET\");\r\n    \r\n    // how would you express this in Android?\r\n    \r\n    // is it safe to always parse the response body of a http request?\r\n    \r\n    BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));\r\n\r\n    return in.readLine(); // something is fishy about this\r\n\t}\r\n}","Question No. 3 Part 3":"//return the database object of the first device as json","Question No. 3 Part 2":"// find both devices in a mongo query (lets assume we have a db collection \"object\" ready and connected)","Solution Question No. 3":"// you may use the node documentation if you need\r\nvar url = require('url');\r\n\r\n// parse the name of the first and second device, as well as the version number and the language\r\n\r\nvar urlString = \"http://www.versus.com/api/en/samsung-galaxy-s4-vs-apple-iphone-5?v=12938987\";\r\n\r\nvar parsed = url.parse(urlString);\r\n\r\nvar languageAndRivals = parsed.pathname.split('api/')[1].split('/');\r\n\r\nvar language = languageAndRivals[0];\r\n\r\nvar rivals = languageAndRivals[1].split('-vs-');\r\n\r\nconsole.log(language);\r\nconsole.log(rivals[0]);\r\n\r\n// find both devices in a mongo query (lets assume we have a db collection \"object\" ready and connected)\r\n\r\nvar devices = object.find({name : {$in : {\"samsung-galaxy-s4\", \"apple-iphone-5\"}}}).toArray();\r\n\r\n//return the database object of the first device as json\r\n\r\nres.writeHead(200, {'content-type': 'application/json'});\r\nres.end(JSON.stringify(devices[0]));","Question No. 3":"// you may use the documentation\r\n\r\n// parse the name of the first and second device, as well as the version number and the language code\r\n\r\nvar urlString = \"http://www.versus.com/api/en/samsung-galaxy-s4-vs-apple-iphone-5?v=12938987\";\r\n\r\n// find both devices in a mongo query (lets assume we have a db collection \"object\" ready and connected)\r\n\r\n//return the database object of the first device as json\r\n","Question No. 2":"/*\r\npublic class Vehicle{\r\n  public int wheels;\r\n  public String color;\r\n  public String name;\r\n  \r\n  public void drive(String destination){\r\n    System.out.println(name + \" drives to \" + destination);\r\n  }\r\n  \r\n  public Vehicle(int wheels, String color, String name){\r\n    this.wheels = wheels;\r\n    this.color = color;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\npublic class Car extends Vehicle{\r\n  public int doors;\r\n\r\n  public Car(String color, int doors){\r\n    super(4, color, \"Car\");\r\n    this.doors = doors;\r\n  }\r\n}\r\n*/","Question No. 1":"for (var i = 0; i \u003C 99; i++) {\r\n    setTimeout(function () {\r\n         console.log(i);\r\n    }, 10);\r\n}"}
</script>
<script src="https://cdn.firebase.com/v0/firebase.js"></script>


  
  
<div class="modal fade" id="switching-language-modal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      
  <p>The pad's language is switching to: <span></span>&hellip;</p>
  <p>Everyone&rsquo;s tabs will refresh shortly.</p>

    </div>
  </div>
</div>


<div class="modal fade" id="settings-modal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      
  <h3><span class="fui-gear"></span>Pad Settings</h3>
  <ul>
    <li>
      <h4>Language</h4>
      <p>Warning: Changing the pad language will refresh the window for all participants.</p>
      <select class="selectpicker" id="language-select" name="language-select"><option value="c">C</option>
<option value="csharp">C#</option>
<option value="cpp">C++</option>
<option value="clojure">Clojure</option>
<option value="coffeescript">CoffeeScript</option>
<option value="go">Go</option>
<option value="haskell">Haskell</option>
<option selected="selected" value="java">Java</option>
<option value="javascript">JavaScript</option>
<option value="markdown">Markdown</option>
<option value="objc">Objective-C</option>
<option value="php">PHP</option>
<option value="perl">Perl</option>
<option value="python">Python</option>
<option value="ruby">Ruby</option>
<option value="scala">Scala</option></select>
    </li>
    <li>
      <h4>Tab &nbsp;Spacing</h4>
      <p>Control the number of spaces used for indentation.</p>
      <select class="selectpicker" id="tab-type-select" name="tab-type-select"><option selected="selected" value="2">2 Space Tabs</option>
<option value="4">4 Space Tabs</option>
<option value="8">8 Space Tabs</option></select>
    </li>
  </ul>

    </div>
  </div>
</div>


<div class="modal fade" id="create-modal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      
    <div class="modal-body clearfix">
      <h4>Choose the language for your new pad:</h4>

      <form accept-charset="UTF-8" action="/" class="new_pad" id="new_pad" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
        <div class="clearfix">
            <ul>
              <li class="header">Interpreted</li>
                <li>
                  <input id="pad_language_coffeescript" name="pad[language]" type="radio" value="coffeescript" />
                  <label for="pad_language_coffeescript">CoffeeScript</label>
                </li>
                <li>
                  <input id="pad_language_javascript" name="pad[language]" type="radio" value="javascript" />
                  <label for="pad_language_javascript">JavaScript</label>
                </li>
                <li>
                  <input id="pad_language_perl" name="pad[language]" type="radio" value="perl" />
                  <label for="pad_language_perl">Perl</label>
                </li>
                <li>
                  <input id="pad_language_php" name="pad[language]" type="radio" value="php" />
                  <label for="pad_language_php">PHP</label>
                </li>
                <li>
                  <input id="pad_language_python" name="pad[language]" type="radio" value="python" />
                  <label for="pad_language_python">Python</label>
                </li>
                <li>
                  <input checked="checked" id="pad_language_ruby" name="pad[language]" type="radio" value="ruby" />
                  <label for="pad_language_ruby">Ruby</label>
                </li>
            </ul>
            <ul>
              <li class="header">Compiled</li>
                <li>
                  <input id="pad_language_c" name="pad[language]" type="radio" value="c" />
                  <label for="pad_language_c">C</label>
                </li>
                <li>
                  <input id="pad_language_clojure" name="pad[language]" type="radio" value="clojure" />
                  <label for="pad_language_clojure">Clojure</label>
                </li>
                <li>
                  <input id="pad_language_cpp" name="pad[language]" type="radio" value="cpp" />
                  <label for="pad_language_cpp">C++</label>
                </li>
                <li>
                  <input id="pad_language_csharp" name="pad[language]" type="radio" value="csharp" />
                  <label for="pad_language_csharp">C#</label>
                </li>
                <li>
                  <input id="pad_language_go" name="pad[language]" type="radio" value="go" />
                  <label for="pad_language_go">Go</label>
                </li>
                <li>
                  <input id="pad_language_haskell" name="pad[language]" type="radio" value="haskell" />
                  <label for="pad_language_haskell">Haskell</label>
                </li>
                <li>
                  <input id="pad_language_java" name="pad[language]" type="radio" value="java" />
                  <label for="pad_language_java">Java</label>
                </li>
                <li>
                  <input id="pad_language_objc" name="pad[language]" type="radio" value="objc" />
                  <label for="pad_language_objc">Objective-C</label>
                </li>
                <li>
                  <input id="pad_language_scala" name="pad[language]" type="radio" value="scala" />
                  <label for="pad_language_scala">Scala</label>
                </li>
            </ul>
            <ul>
              <li class="header">Documents</li>
                <li>
                  <input id="pad_language_markdown" name="pad[language]" type="radio" value="markdown" />
                  <label for="pad_language_markdown">Markdown</label>
                </li>
            </ul>
        </div>
        <p>
          <input class="btn btn-primary" name="commit" type="submit" value="Create Pad" /> or
          <input class="btn btn-primary" name="commit" type="submit" value="Launch Google Hangout" />
        </p>
</form>    </div>

    </div>
  </div>
</div>



  <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js"></script>
    <script src="//cdn.ravenjs.com/1.1.2/jquery,native/raven.min.js"></script>
    <script>
      Raven.config('https://4d747205c6ed435c889710eaead44e12@app.getsentry.com/10579', {
        includePaths: [
          /localhost/,
          /coderpad\.io/,
          /vincentwoo\.com/,
          /d146h09pbg0b1a\.cloudfront/
        ],
        ignoreUrls: [
          /graph\.facebook\.com/i,
          /connect\.facebook\.net\/en_US\/all\.js/i,
          /eatdifferent\.com\.woopra-ns\.com/i,
          /static\.woopra\.com\/js\/woopra\.js/i,
          /extensions\//i,
          /^chrome:\/\//i,
          /127\.0\.0\.1:4001\/isrunning/i,
          /webappstoolbarba\.texthelp\.com\//i,
          /metrics\.itunes\.apple\.com\.edgesuite\.net\//i
        ]
      }).install();
    </script>
  <script src="//d146h09pbg0b1a.cloudfront.net/assets/application-ac1fc5b18aff7c11b7c357930bb008e9.js"></script>
</body>
</html>
